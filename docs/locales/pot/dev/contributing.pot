# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017. A <a href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a> Project
# This file is distributed under the same license as the pipenv package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pipenv 2018.11.27.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-20 13:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../dev/contributing.rst:2
msgid "Contributing to Pipenv"
msgstr ""

#: ../../dev/contributing.rst:4
msgid "If you're reading this, you're probably interested in contributing to Pipenv. Thank you very much! Open source projects live-and-die based on the support they receive from others, and the fact that you're even considering contributing to the Pipenv project is *very* generous of you."
msgstr ""

#: ../../dev/contributing.rst:9
msgid "This document lays out guidelines and advice for contributing to this project. If you're thinking of contributing, please start by reading this document and getting a feel for how contributing to this project works. If you have any questions, feel free to reach out to either `Dan Ryan`_, `Tzu-ping Chung`_, or `Nate Prewitt`_, the primary maintainers."
msgstr ""

#: ../../dev/contributing.rst:19
msgid "The guide is split into sections based on the type of contribution you're thinking of making, with a section that covers general guidelines for all contributors."
msgstr ""

#: ../../dev/contributing.rst:25
msgid "General Guidelines"
msgstr ""

#: ../../dev/contributing.rst:28
msgid "Be Cordial"
msgstr ""

#: ../../dev/contributing.rst:30
msgid "**Be cordial or be on your way**. *â€”Kenneth Reitz*"
msgstr ""

#: ../../dev/contributing.rst:32
msgid "Pipenv has one very important rule governing all forms of contribution, including reporting bugs or requesting features. This golden rule is \"`be cordial or be on your way`_\"."
msgstr ""

#: ../../dev/contributing.rst:36
msgid "**All contributions are welcome**, as long as everyone involved is treated with respect."
msgstr ""

#: ../../dev/contributing.rst:45
msgid "Get Early Feedback"
msgstr ""

#: ../../dev/contributing.rst:47
msgid "If you are contributing, do not feel the need to sit on your contribution until it is perfectly polished and complete. It helps everyone involved for you to seek feedback as early as you possibly can. Submitting an early, unfinished version of your contribution for feedback in no way prejudices your chances of getting that contribution accepted, and can save you from putting a lot of work into a contribution that is not suitable for the project."
msgstr ""

#: ../../dev/contributing.rst:55
msgid "Contribution Suitability"
msgstr ""

#: ../../dev/contributing.rst:57
msgid "Our project maintainers have the last word on whether or not a contribution is suitable for Pipenv. All contributions will be considered carefully, but from time to time, contributions will be rejected because they do not suit the current goals or needs of the project."
msgstr ""

#: ../../dev/contributing.rst:62
msgid "If your contribution is rejected, don't despair! As long as you followed these guidelines, you will have a much better chance of getting your next contribution accepted."
msgstr ""

#: ../../dev/contributing.rst:68
msgid "Questions"
msgstr ""

#: ../../dev/contributing.rst:70
msgid "The GitHub issue tracker is for *bug reports* and *feature requests*. Please do not use it to ask questions about how to use Pipenv. These questions should instead be directed to `Stack Overflow`_. Make sure that your question is tagged with the ``pipenv`` tag when asking it on Stack Overflow, to ensure that it is answered promptly and accurately."
msgstr ""

#: ../../dev/contributing.rst:80
msgid "Code Contributions"
msgstr ""

#: ../../dev/contributing.rst:84
msgid "Steps for Submitting Code"
msgstr ""

#: ../../dev/contributing.rst:86
msgid "When contributing code, you'll want to follow this checklist:"
msgstr ""

#: ../../dev/contributing.rst:88
msgid "Understand our `development philosophy`_."
msgstr ""

#: ../../dev/contributing.rst:89
msgid "Fork the repository on GitHub."
msgstr ""

#: ../../dev/contributing.rst:90
msgid "Set up your :ref:`dev-setup`"
msgstr ""

#: ../../dev/contributing.rst:91
msgid "Run the tests (:ref:`testing`) to confirm they all pass on your system. If they don't, you'll need to investigate why they fail. If you're unable to diagnose this yourself, raise it as a bug report by following the guidelines in this document: :ref:`bug-reports`."
msgstr ""

#: ../../dev/contributing.rst:95
msgid "Write tests that demonstrate your bug or feature. Ensure that they fail."
msgstr ""

#: ../../dev/contributing.rst:96
msgid "Make your change."
msgstr ""

#: ../../dev/contributing.rst:97
msgid "Run the entire test suite again, confirming that all tests pass *including the ones you just added*."
msgstr ""

#: ../../dev/contributing.rst:99
msgid "Send a GitHub Pull Request to the main repository's ``master`` branch. GitHub Pull Requests are the expected method of code collaboration on this project."
msgstr ""

#: ../../dev/contributing.rst:103
msgid "The following sub-sections go into more detail on some of the points above."
msgstr ""

#: ../../dev/contributing.rst:111
msgid "Development Setup"
msgstr ""

#: ../../dev/contributing.rst:113
msgid "To get your development environment setup, run:"
msgstr ""

#: ../../dev/contributing.rst:121
msgid "This will install the repo version of Pipenv and then install the development dependencies. Once that has completed, you can start developing."
msgstr ""

#: ../../dev/contributing.rst:124
msgid "The repo version of Pipenv must be installed over other global versions to resolve conflicts with the ``pipenv`` folder being implicitly added to ``sys.path``. See `pypa/pipenv#2557`_ for more details."
msgstr ""

#: ../../dev/contributing.rst:134
msgid "Testing"
msgstr ""

#: ../../dev/contributing.rst:136
msgid "Tests are written in ``pytest`` style and can be run very simply:"
msgstr ""

#: ../../dev/contributing.rst:143
msgid "This will run all Pipenv tests, which can take awhile. To run a subset of the tests, the standard pytest filters are available, such as:"
msgstr ""

#: ../../dev/contributing.rst:146
msgid "provide a directory or file: ``pytest tests/unit`` or ``pytest tests/unit/test_cmdparse.py``"
msgstr ""

#: ../../dev/contributing.rst:147
msgid "provide a keyword expression: ``pytest -k test_lock_editable_vcs_without_install``"
msgstr ""

#: ../../dev/contributing.rst:148
msgid "provide a nodeid: ``pytest tests/unit/test_cmdparse.py::test_parse``"
msgstr ""

#: ../../dev/contributing.rst:149
msgid "provide a test marker: ``pytest -m lock``"
msgstr ""

#: ../../dev/contributing.rst:153
msgid "Code Review"
msgstr ""

#: ../../dev/contributing.rst:155
msgid "Contributions will not be merged until they've been code reviewed. You should implement any code review feedback unless you strongly object to it. In the event that you object to the code review feedback, you should make your case clearly and calmly. If, after doing so, the feedback is judged to still apply, you must either apply the feedback or withdraw your contribution."
msgstr ""

#: ../../dev/contributing.rst:163
msgid "Package Index"
msgstr ""

#: ../../dev/contributing.rst:165
msgid "To speed up testing, tests that rely on a package index for locking and installing use a local server that contains vendored packages in the ``tests/pypi`` directory. Each vendored package should have it's own folder containing the necessary releases. When adding a release for a package, it is easiest to use either the ``.tar.gz`` or universal wheels (ex: ``py2.py3-none``). If a ``.tar.gz`` or universal wheel is not available, add wheels for all available architectures and platforms."
msgstr ""

#: ../../dev/contributing.rst:176
msgid "Documentation Contributions"
msgstr ""

#: ../../dev/contributing.rst:178
msgid "Documentation improvements are always welcome! The documentation files live in the ``docs/`` directory of the codebase. They're written in `reStructuredText`_, and use `Sphinx`_ to generate the full suite of documentation."
msgstr ""

#: ../../dev/contributing.rst:183
msgid "When contributing documentation, please do your best to follow the style of the documentation files. This means a soft-limit of 79 characters wide in your text files and a semi-formal, yet friendly and approachable, prose style."
msgstr ""

#: ../../dev/contributing.rst:187
msgid "When presenting Python code, use single-quoted strings (``'hello'`` instead of ``\"hello\"``)."
msgstr ""

#: ../../dev/contributing.rst:197
msgid "Bug Reports"
msgstr ""

#: ../../dev/contributing.rst:199
msgid "Bug reports are hugely important! They are recorded as `GitHub issues`_. Please be aware of the following things when filing bug reports:"
msgstr ""

#: ../../dev/contributing.rst:204
msgid "Avoid raising duplicate issues. *Please* use the GitHub issue search feature to check whether your bug report or feature request has been mentioned in the past. Duplicate bug reports and feature requests are a huge maintenance burden on the limited resources of the project. If it is clear from your report that you would have struggled to find the original, that's ok, but if searching for a selection of words in your issue title would have found the duplicate then the issue will likely be closed extremely abruptly."
msgstr ""

#: ../../dev/contributing.rst:211
msgid "When filing bug reports about exceptions or tracebacks, please include the *complete* traceback. Partial tracebacks, or just the exception text, are not helpful. Issues that do not contain complete tracebacks may be closed without warning."
msgstr ""

#: ../../dev/contributing.rst:215
msgid "Make sure you provide a suitable amount of information to work with. This means you should provide:"
msgstr ""

#: ../../dev/contributing.rst:218
msgid "Guidance on **how to reproduce the issue**. Ideally, this should be a *small* code sample that can be run immediately by the maintainers. Failing that, let us know what you're doing, how often it happens, what environment you're using, etc. Be thorough: it prevents us needing to ask further questions."
msgstr ""

#: ../../dev/contributing.rst:223
msgid "Tell us **what you expected to happen**. When we run your example code, what are we expecting to happen? What does \"success\" look like for your code?"
msgstr ""

#: ../../dev/contributing.rst:226
msgid "Tell us **what actually happens**. It's not helpful for you to say \"it doesn't work\" or \"it fails\". Tell us *how* it fails: do you get an exception? A hang? The packages installed seem incorrect? How was the actual result different from your expected result?"
msgstr ""

#: ../../dev/contributing.rst:230
msgid "Tell us **what version of Pipenv you're using**, and **how you installed it**. Different versions of Pipenv behave differently and have different bugs, and some distributors of Pipenv ship patches on top of the code we supply."
msgstr ""

#: ../../dev/contributing.rst:235
msgid "If you do not provide all of these things, it will take us much longer to fix your problem. If we ask you to clarify these and you never respond, we will close your issue without fixing it."
msgstr ""

#: ../../dev/contributing.rst:242
msgid "Run the tests"
msgstr ""

#: ../../dev/contributing.rst:244
msgid "Three ways of running the tests are as follows:"
msgstr ""

#: ../../dev/contributing.rst:246
msgid "``make test`` (which uses ``docker``)"
msgstr ""

#: ../../dev/contributing.rst:247
msgid "``./run-tests.sh`` or ``run-tests.bat``"
msgstr ""

#: ../../dev/contributing.rst:248
msgid "Using pipenv:"
msgstr ""

#: ../../dev/contributing.rst:258
msgid "For the last two, it is important that your environment is setup correctly, and this may take some work, for example, on a specific Mac installation, the following steps may be needed::"
msgstr ""

